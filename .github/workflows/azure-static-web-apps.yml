name: Azure Static Web Apps CI/CD
# Main deployment workflow for AI Study Plans static website
# This workflow builds and deploys the static site directly to Azure Static Web Apps

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      # Remove any existing .git/config extraheader
      - name: Configure Git
        shell: bash
        run: |
          # Ensure Git is properly initialized with safe directories and no extraheader
          git config --global --add safe.directory '*'
          git config --global core.longpaths true
          
          # First check if the extraheader exists before trying to remove it
          if git config --global --get http.https://github.com/.extraheader > /dev/null 2>&1; then
            echo "Removing existing extraheader..."
            git config --global --unset-all http.https://github.com/.extraheader
          else
            echo "No extraheader found to remove"
          fi
          
          # Display current git config for debugging
          echo "Current Git configuration:"
          git config --global --list
      
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Git config
        run: |
          git config --global core.longpaths true
          git config --list

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup caching
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies and build
        run: |
          npm ci
          chmod +x ci-build.sh
          ./ci-build.sh
        env:
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'https://aistudyplans.com' }}
          # Add any other environment variables needed for the build here

      # Create a simple test file in the output directory
      - name: Add test file
        run: |
          echo "This is a test file to verify deployment" > out/test.txt
          ls -la out/

      # Ensure staticwebapp.config.json is in the output directory
      - name: Verify staticwebapp.config.json
        run: |
          if [ ! -f "out/staticwebapp.config.json" ]; then
            echo "staticwebapp.config.json not found in output directory. Copying from root."
            cp staticwebapp.config.json out/
          fi
          echo "Content of staticwebapp.config.json:"
          cat out/staticwebapp.config.json

      # Update API route in staticwebapp.config.json for Email Relay
      - name: Update API routes in staticwebapp.config.json
        run: |
          cat > out/staticwebapp.config.json << EOL
          {
            "navigationFallback": {
              "rewrite": "/index.html"
            },
            "mimeTypes": {
              ".json": "application/json"
            },
            "routes": [
              {
                "route": "/api/waitlist",
                "allowedRoles": ["anonymous"],
                "rewrite": "https://${{ secrets.FUNCTION_APP_NAME || 'aistudyplans-function' }}.azurewebsites.net/api/waitlist"
              }
            ]
          }
          EOL
          echo "Updated staticwebapp.config.json with Azure Functions API routes"
          cat out/staticwebapp.config.json

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          app_location: "out" # Only deploy the output directory
          api_location: "api" # Use the dedicated API directory
          output_location: "" # No additional output dir, we're already in the output
          skip_app_build: true # Skip build as we already built the app
          is_static_export: true # Explicitly tell Azure this is a static export
          ###### End of Repository/Build Configurations ######

      - name: Report deployment status
        if: always()
        run: |
          if [ "${{ steps.builddeploy.outcome }}" == "success" ]; then
            echo "✅ Deployment succeeded"
          else
            echo "❌ Deployment failed"
            echo "Please check the logs for more information"
          fi

  deploy_azure_functions:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Deploy Azure Functions
    needs: build_and_deploy_job
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Use the official Azure Functions Action instead of installing Core Tools manually
      - name: 'Deploy Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ secrets.FUNCTION_APP_NAME || 'aistudyplans-function' }}
          package: './azure-functions'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
      
      # Backup method - Only run if the primary deployment method fails
      - name: Install Azure Functions Core Tools (if needed)
        if: failure()
        run: |
          echo "Primary deployment method failed. Attempting alternative method..."
          npm install -g azure-functions-core-tools@4 --unsafe-perm false
          echo "Azure Functions Core Tools installed successfully"
          func --version

      - name: Login to Azure (if needed)
        if: failure()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure Functions dependencies (if needed)
        if: failure()
        run: |
          cd azure-functions
          npm install
          echo "Function app dependencies installed successfully"
          ls -la

      - name: Verify Azure Function App (if needed)
        if: failure()
        run: |
          echo "Verifying Azure Function App..."
          FUNCTION_APP_NAME="${{ secrets.FUNCTION_APP_NAME || 'aistudyplans-function' }}"
          az functionapp show --name "$FUNCTION_APP_NAME" --resource-group "${{ secrets.AZURE_RESOURCE_GROUP || 'AIStudyPlans-RG1' }}" --query "name" -o tsv
          
          if [ $? -ne 0 ]; then
            echo "❌ Function App '$FUNCTION_APP_NAME' not found or not accessible."
            echo "Please ensure it exists and the credentials have proper access."
            exit 1
          else
            echo "✅ Function App '$FUNCTION_APP_NAME' verified successfully."
          fi

      - name: Deploy Azure Functions (alternative method)
        if: failure()
        run: |
          cd azure-functions
          echo "Deploying function app using alternative method..."
          func azure functionapp publish ${{ secrets.FUNCTION_APP_NAME || 'aistudyplans-function' }} --force
        env:
          AZURE_FUNCTIONAPP_NAME: ${{ secrets.FUNCTION_APP_NAME || 'aistudyplans-function' }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
          app_location: "/" # App source code path 