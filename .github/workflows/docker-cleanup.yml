name: Docker Cleanup

on:
  # Run after comprehensive tests
  workflow_run:
    workflows: ["Comprehensive Testing"]
    types:
      - completed
    
  # Run on a schedule (weekly)
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at midnight
    
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      cleanup_type:
        description: 'Type of cleanup to perform'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - containers
          - images
          - volumes
          - networks
          - prune

jobs:
  cleanup:
    name: Docker Resource Cleanup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Determine cleanup type
        id: determine-cleanup-type
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            CLEANUP_TYPE="${{ github.event.inputs.cleanup_type }}"
          else
            CLEANUP_TYPE="all"
          fi
          echo "cleanup-type=$CLEANUP_TYPE" >> $GITHUB_OUTPUT
      
      - name: Make cleanup script executable
        run: chmod +x scripts/docker-cleanup.sh
      
      - name: Run Docker cleanup
        run: ./scripts/docker-cleanup.sh --${{ steps.determine-cleanup-type.outputs.cleanup-type }}
      
      - name: Log cleanup information
        run: |
          echo "::group::Docker Images"
          docker images
          echo "::endgroup::"
          
          echo "::group::Docker Containers"
          docker ps -a
          echo "::endgroup::"
          
          echo "::group::Docker Volumes"
          docker volume ls
          echo "::endgroup::"
          
          echo "::group::Docker Networks"
          docker network ls
          echo "::endgroup::"
      
      - name: Notify on Slack for cleanup issues
        # Only run this step if there was an issue with cleanup
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 