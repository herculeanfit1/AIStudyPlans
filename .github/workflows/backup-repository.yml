name: Backup Repository

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          path: source-repo

      - name: Backup to secondary repository
        env:
          BACKUP_PAT: ${{ secrets.BACKUP_PAT }}
        run: |
          cd source-repo
          
          # Configure Git
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          # Create a temporary directory for the filtered content
          mkdir -p ../filtered-repo
          
          # Copy everything except .github directory to the filtered directory
          rsync -av --exclude='.github' ./ ../filtered-repo/
          
          # Add a special .gitignore to the backup repo to prevent workflow triggers
          echo "# Ignore GitHub workflows to prevent duplicate runs" > ../filtered-repo/.github-actions-ignore
          echo ".github/" >> ../filtered-repo/.github-actions-ignore
          
          # Set up the new remote repository
          cd ../filtered-repo
          git init
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add .
          git commit -m "Backup from main repository - $(date)"
          
          # Show the repo URL we're pushing to (with any token part masked)
          echo "Pushing to: https://***@github.com/herculeanfit1/AIStudyPlans-backup.git"
          
          # Push to backup repository (force to overwrite history)
          git remote add backup https://${BACKUP_PAT}@github.com/herculeanfit1/AIStudyPlans-backup.git
          git push backup main:main --force
